name: Deploy

on:
  workflow_run:
    workflows:
      - CI
    types:
      - completed

  push:
    branches: ["master"]
    # Publish semver tags as releases.
    tags: ["v*.*.*"]
  pull_request:
    branches: ["master"]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  IMAGE_NAME: ${{ github.repository }}

jobs:
  dockerPush:
    # We'll only build and push when landing on main, not for PRs
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}


      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into docker registry
        # if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        id: build-and-push
        run: |
          echo -e "TOKEN=${{ secrets.DISCORD_TOKEN }}
          DEVELOPMENT=false" > ./bot/.env
          docker compose build
          docker compose push

  deploy:
    runs-on: ubuntu-latest
    # We'll only build and push when landing on main, not for PRs
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    needs:
      - dockerPush
    steps:
      - name: Deploy app
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd networking_accumulator
            git pull
            docker compose pull
            docker compose up --remove-orphans -d

